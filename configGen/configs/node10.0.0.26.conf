blockchain.config.name = "regtest"

peer.discovery = {
    enabled = false
    bind.ip = 10.0.0.26
    external.ip = 10.0.0.26
}

peer {
    active = [    
	{ 
	  ip = 10.0.0.10
	  port = 30305
	  nodeId = bd107de160fe614ef478680e30fecf30fbe0e2f9841b4dc814e8b425df43936b6d7526938e1614f8ef845ad120c3766d088c8642e61a2fa221f07f2be8543fde
	}  
	,{ 
	  ip = 10.0.0.7
	  port = 30305
	  nodeId = ea4e4319e3f2e5c6911d2145dedf79667565cc9ad03837aaeaab706a94cb78930df233054b13ded830be7085b2f7f5a0ad983f6e445afe0f5ea87d0edf4c804b
	}  
	,{ 
	  ip = 10.0.0.22
	  port = 30305
	  nodeId = 29915b67ea54cdcf8eb30d59e552b63524c0a348aaa99a69543f52f87f3f6890809c4db62489c2dec77c553aaa3cd5707fc1de2e095cb762e6dda00214cf2684
	}]

    # currently only protocol supported is RSK
    capabilities = [rsk]

    bind.ip = 10.0.0.26

    # Peer for server to listen for incoming
    # connections
    listen.port = 30305

    connection.timeout = 2
    channel.read.timeout = 30

    privateKey = 7f1e80b607ddb2fd6738815152fc1072d44b97eb7306bd56931c84d02ec8e1b8

    networkId = 456124
    p2p {
        # version = 4
        framing.maxSize = 32768
        eip8 = true
    }
    maxAcivePeers = 30
}
genesis = rootstock-dev.json
transaction.approve.timeout = 15
transaction.outdated.threshold = 10

# default directory where we keep
# basic Serpent samples relative
# to home.dir
samples.dir = samples

database {
    dir = node26
    reset = true
}

# this string is computed
# to be eventually the address
# that get the miner reward
coinbase.secret = monkey1

dump {
    full = false
    dir = dmp
    block = -1
    style = pretty
    clean.on.restart = true
}

vm.structured {
    trace = false
    dir = vmtrace
    compressed = true
    initStorageLimit = 10000

    # enables storage disctionary db recording
    # see the org.ehereum.db.StorageDisctionary class for details
    storage.dictionary.enabled = false
}
trace.startblock = -1
play.vm = false
hello.phrase = Dev
root.hash.start = null
keyvalue.datasource = leveldb
redis.enabled=false
record.blocks=false
blockchain.only=false
blocks.loader=""
details.inmemory.storage.limit=1000
cache {
    flush {
        # [0.7 = 70% memory to flush]
        memory = 0
        # [10000 flush each 10000 blocks]
        blocks = 1
    }
}
# eth sync process
sync {
    enabled = true
    max.hashes.ask = 10000
    max.blocks.ask = 100
    peer.count = 10
    waitForSync = false
    exitOnBlockConflict = true
}
# miner options
miner {
    server.enabled = false
    client.enabled = false
    minGasPrice = 0
    # these are values used by MinerServer to set the notify flag on/off
    gasUnitInDollars = 0.001
    minFeesNotifyInDollars = 30
}
simulateTxs {
    enabled = false
}
federator {
    enabled = false
}
rpc {
    enabled = false
}
wallet {
    accounts = [
        {
            privateKey = 7f1e80b607ddb2fd6738815152fc1072d44b97eb7306bd56931c84d02ec8e1b8
            publicKey = 042e4d15f61b29537608dedf1a28f62830b134f391110b288eb749131f7c39864b4dd71ef9a6af5f8b6a6e937439b74ae28247b7a0a366c6c56a792c648cfb8c14
            address = b9dd05861c6d1ac6b7d8af4cbc20c2f214d26e0e
        }
    ]
}
blocks {
    enabled: false
    recorder: "blocksminer1.txt"
}
wire {
    protocol: "rsk"
}
