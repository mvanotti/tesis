blockchain.config.name = "regtest"

peer.discovery = {
    enabled = false
    bind.ip = 10.0.0.14
    external.ip = 10.0.0.14
}

peer {
    active = [    
	{ 
	  ip = 10.0.0.8
	  port = 30305
	  nodeId = 7b233fca1317c5576bf8ef57d5338202636d2ac9179cd99de5344f786ddfad9c170443b1a11126e1fe2514d3d191caf48c2ee2eb806374579f1fa7bfec6e61d8
	}  
	,{ 
	  ip = 10.0.0.6
	  port = 30305
	  nodeId = d93499317aa6547341a74ed828da5b3668314d4fc2ddfdf65b0a5b15a9de11f8ca65e4cc4383bbb7efd5f4d945efe6a3e22648bca75d1c6799b6bc0cc98dccb7
	}  
	,{ 
	  ip = 10.0.0.10
	  port = 30305
	  nodeId = bd107de160fe614ef478680e30fecf30fbe0e2f9841b4dc814e8b425df43936b6d7526938e1614f8ef845ad120c3766d088c8642e61a2fa221f07f2be8543fde
	}]

    # currently only protocol supported is RSK
    capabilities = [rsk]

    bind.ip = 10.0.0.14

    # Peer for server to listen for incoming
    # connections
    listen.port = 30305

    connection.timeout = 2
    channel.read.timeout = 30

    privateKey = 9c4f11bbbb0f9dc0c14113f60f6fb15928254a4a7a4d28385d9b76fc17be6d56

    networkId = 456124
    p2p {
        # version = 4
        framing.maxSize = 32768
        eip8 = true
    }
    maxAcivePeers = 30
}
genesis = rootstock-dev.json
transaction.approve.timeout = 15
transaction.outdated.threshold = 10

# default directory where we keep
# basic Serpent samples relative
# to home.dir
samples.dir = samples

database {
    dir = node14
    reset = true
}

# this string is computed
# to be eventually the address
# that get the miner reward
coinbase.secret = monkey1

dump {
    full = false
    dir = dmp
    block = -1
    style = pretty
    clean.on.restart = true
}

vm.structured {
    trace = false
    dir = vmtrace
    compressed = true
    initStorageLimit = 10000

    # enables storage disctionary db recording
    # see the org.ehereum.db.StorageDisctionary class for details
    storage.dictionary.enabled = false
}
trace.startblock = -1
play.vm = false
hello.phrase = Dev
root.hash.start = null
keyvalue.datasource = leveldb
redis.enabled=false
record.blocks=false
blockchain.only=false
blocks.loader=""
details.inmemory.storage.limit=1000
cache {
    flush {
        # [0.7 = 70% memory to flush]
        memory = 0
        # [10000 flush each 10000 blocks]
        blocks = 1
    }
}
# eth sync process
sync {
    enabled = true
    max.hashes.ask = 10000
    max.blocks.ask = 100
    peer.count = 10
    waitForSync = false
    exitOnBlockConflict = true
}
# miner options
miner {
    server.enabled = false
    client.enabled = false
    minGasPrice = 0
    # these are values used by MinerServer to set the notify flag on/off
    gasUnitInDollars = 0.001
    minFeesNotifyInDollars = 30
}
simulateTxs {
    enabled = false
}
federator {
    enabled = false
}
rpc {
    enabled = false
}
wallet {
    accounts = [
        {
            privateKey = 9c4f11bbbb0f9dc0c14113f60f6fb15928254a4a7a4d28385d9b76fc17be6d56
            publicKey = 04bf25a0dae60ac16b09cda6c11e8cedbf2b0eb73d1f150dff59a79a41596023bc16270d7ea041faf7f31aaa117c3291eb448c448d7f0a1e2bbe9c1f4ca495c14d
            address = dcdd7de683a537d4efe1752853353e304e02d0e3
        }
    ]
}
blocks {
    enabled: false
    recorder: "blocksminer1.txt"
}
wire {
    protocol: "rsk"
}
