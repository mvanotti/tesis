blockchain.config.name = "regtest"

peer.discovery = {
    enabled = false
    bind.ip = 10.0.0.19
    external.ip = 10.0.0.19
}

peer {
    active = [    
	{ 
	  ip = 10.0.0.5
	  port = 30305
	  nodeId = af02effc252acb61203ee0883280d18066fcd3fc83bafc72210ccdceb8c2f4f90dd5c911359880655b23a9fca56628a4d5f245ecab26bde457b02bcd9d7c8d9a
	}  
	,{ 
	  ip = 10.0.0.28
	  port = 30305
	  nodeId = 11c28132e9de2640d65e93f36f8665cd52063f4bf1ae3bad427931ba33800afd61ed8a1cb4321dcbc7f4216afbf98b4c7a50762db3501ace3d159b8c864e1dde
	}  
	,{ 
	  ip = 10.0.0.20
	  port = 30305
	  nodeId = fbbac84425856a4d457d474f9a150eb517dd5f85d138290b1d59532b546f617ca6c68de237617a0b6632059f1382cb6ffdcb34af8a8e8543998ccd09467b34d9
	}  
	,{ 
	  ip = 10.0.0.25
	  port = 30305
	  nodeId = 4a0ccfb5550db6ce14928386f6784e19d243ede93bc8be0a579a7081f8dd01dc50672d918ed159be79241de4ed40e8871d973b743f3c944ce3f74e973932759b
	}]

    # currently only protocol supported is RSK
    capabilities = [rsk]

    bind.ip = 10.0.0.19

    # Peer for server to listen for incoming
    # connections
    listen.port = 30305

    connection.timeout = 2
    channel.read.timeout = 30

    privateKey = 4d7eff716d4c512dc136d8543040a72ee88b6c805e2b804e8435caecce00ccd2

    networkId = 456124
    p2p {
        # version = 4
        framing.maxSize = 32768
        eip8 = true
    }
    maxAcivePeers = 30
}
genesis = rootstock-dev.json
transaction.approve.timeout = 15
transaction.outdated.threshold = 10

# default directory where we keep
# basic Serpent samples relative
# to home.dir
samples.dir = samples

database {
    dir = node19
    reset = true
}

# this string is computed
# to be eventually the address
# that get the miner reward
coinbase.secret = monkey1

dump {
    full = false
    dir = dmp
    block = -1
    style = pretty
    clean.on.restart = true
}

vm.structured {
    trace = false
    dir = vmtrace
    compressed = true
    initStorageLimit = 10000

    # enables storage disctionary db recording
    # see the org.ehereum.db.StorageDisctionary class for details
    storage.dictionary.enabled = false
}
trace.startblock = -1
play.vm = false
hello.phrase = Dev
root.hash.start = null
keyvalue.datasource = leveldb
redis.enabled=false
record.blocks=false
blockchain.only=false
blocks.loader=""
details.inmemory.storage.limit=1000
cache {
    flush {
        # [0.7 = 70% memory to flush]
        memory = 0
        # [10000 flush each 10000 blocks]
        blocks = 1
    }
}
# eth sync process
sync {
    enabled = true
    max.hashes.ask = 10000
    max.blocks.ask = 100
    peer.count = 10
    waitForSync = false
    exitOnBlockConflict = true
}
# miner options
miner {
    server.enabled = true
    client.enabled = true
    minGasPrice = 0
    # these are values used by MinerServer to set the notify flag on/off
    gasUnitInDollars = 0.001
    minFeesNotifyInDollars = 30
}
simulateTxs {
    enabled = false
}
federator {
    enabled = false
}
rpc {
    enabled = false
}
wallet {
    accounts = [
        {
            privateKey = 4d7eff716d4c512dc136d8543040a72ee88b6c805e2b804e8435caecce00ccd2
            publicKey = 044bbcd0d2fb5b0956bc9bfcc4faee73bde6a87977ba3d99759eda92b4cf934a0def682c6bf8056bab13beed8d72e99b223ac83f31442e1e0a5b453627fc855dd4
            address = 273f6a6d05418ae5d8b8b56a704ff309afd10511
        }
    ]
}
blocks {
    enabled: false
    recorder: "blocksminer1.txt"
}
wire {
    protocol: "rsk"
}
