blockchain.config.name = "regtest"

peer.discovery = {
    enabled = false
    bind.ip = 10.0.0.12
    external.ip = 10.0.0.12
}

peer {
    active = [    
	{ 
	  ip = 10.0.0.8
	  port = 30305
	  nodeId = 7b233fca1317c5576bf8ef57d5338202636d2ac9179cd99de5344f786ddfad9c170443b1a11126e1fe2514d3d191caf48c2ee2eb806374579f1fa7bfec6e61d8
	}  
	,{ 
	  ip = 10.0.0.3
	  port = 30305
	  nodeId = c7523df51710a3b0e8a4e0cb1b08a78052a90129bd72cf5c7d80f12ac22759b71c8a9d39b834fdd35cbba213c2bd50fc47404989fc57ab99993ef7181c0dde35
	}  
	,{ 
	  ip = 10.0.0.13
	  port = 30305
	  nodeId = 7edf495062e5f56ba06c09030254ef0951566061bd96f0e463a3d76bcbf98c5df7335bd7dc24389b9f8d329b7dcb7da530fe6646bea26b1ab163e90c2a1f949e
	}  
	,{ 
	  ip = 10.0.0.15
	  port = 30305
	  nodeId = 16064bca689fa75f0cb1b50ed6eed64e198102918b6a4a6c2cf611590818269ee145d0c80548583b57650cfd6a11b2784e9550c9bb7e51c90b682bdc696ccd96
	}]

    # currently only protocol supported is RSK
    capabilities = [rsk]

    bind.ip = 10.0.0.12

    # Peer for server to listen for incoming
    # connections
    listen.port = 30305

    connection.timeout = 2
    channel.read.timeout = 30

    privateKey = bd3d0113d499ae570310746356f902a9deb531c7eceef01a932540d4f488e269

    networkId = 456124
    p2p {
        # version = 4
        framing.maxSize = 32768
        eip8 = true
    }
    maxAcivePeers = 30
}
genesis = rootstock-dev.json
transaction.approve.timeout = 15
transaction.outdated.threshold = 10

# default directory where we keep
# basic Serpent samples relative
# to home.dir
samples.dir = samples

database {
    dir = node12
    reset = true
}

# this string is computed
# to be eventually the address
# that get the miner reward
coinbase.secret = monkey1

dump {
    full = false
    dir = dmp
    block = -1
    style = pretty
    clean.on.restart = true
}

vm.structured {
    trace = false
    dir = vmtrace
    compressed = true
    initStorageLimit = 10000

    # enables storage disctionary db recording
    # see the org.ehereum.db.StorageDisctionary class for details
    storage.dictionary.enabled = false
}
trace.startblock = -1
play.vm = false
hello.phrase = Dev
root.hash.start = null
keyvalue.datasource = leveldb
redis.enabled=false
record.blocks=false
blockchain.only=false
blocks.loader=""
details.inmemory.storage.limit=1000
cache {
    flush {
        # [0.7 = 70% memory to flush]
        memory = 0
        # [10000 flush each 10000 blocks]
        blocks = 1
    }
}
# eth sync process
sync {
    enabled = true
    max.hashes.ask = 10000
    max.blocks.ask = 100
    peer.count = 10
    waitForSync = false
    exitOnBlockConflict = true
}
# miner options
miner {
    server.enabled = true
    client.enabled = true
    minGasPrice = 0
    # these are values used by MinerServer to set the notify flag on/off
    gasUnitInDollars = 0.001
    minFeesNotifyInDollars = 30
}
simulateTxs {
    enabled = false
}
federator {
    enabled = false
}
rpc {
    enabled = false
}
wallet {
    accounts = [
        {
            privateKey = bd3d0113d499ae570310746356f902a9deb531c7eceef01a932540d4f488e269
            publicKey = 042712fed691a16269c5202afd7455aaa802bbe34dc4e8ea0e7a71d6eebfe98409c9207c98a7b9c7ff12ef02b1094cb4a7c8f593cb87c0511153eff179715a5d25
            address = a3339dfc6a323fe9cac266570b19026f6df58187
        }
    ]
}
blocks {
    enabled: false
    recorder: "blocksminer1.txt"
}
wire {
    protocol: "rsk"
}
